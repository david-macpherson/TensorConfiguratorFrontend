# Prometheus config
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-loki
  namespace: default
  labels:
    app.kubernetes.io/name: metrics-loki
data:
  loki-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 0

    common:
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    analytics:
      reporting_enabled: false
    query_scheduler:  
      max_outstanding_requests_per_tenant: 2048

    limits_config:
      split_queries_by_interval: 24h

    frontend:
      max_outstanding_per_tenant: 1024  
      
---

apiVersion: v1
kind: Service
metadata:
  name: metrics-loki
  namespace: default
  labels:
    app.kubernetes.io/name: metrics-loki
spec:
  ports:
    - name: loki-port
      protocol: TCP
      port: 3100
      targetPort: 3100
  selector:
    app.kubernetes.io/name: metrics-loki

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-loki
  namespace: default
  labels:
    app.kubernetes.io/name: metrics-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-loki
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-loki
    spec:
      volumes:
        - name: metrics-loki-config
          configMap:
            name: metrics-loki
            items:
              - key: loki-config.yaml
                path: local-config.yaml
      containers:
        - name: metrics-loki
          image: grafana/loki:latest
          volumeMounts:
            - name: metrics-loki-config
              mountPath: /etc/loki/
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: sps.tensorworks.com.au/cpu
                    operator: In
                    values:
                      - 'true'
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600