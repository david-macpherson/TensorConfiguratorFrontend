# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: metrics-promtail
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
#   storageClassName: gp2


# ---


apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-promtail
  namespace: tenant-tensorworks-testing
  labels:
    app.kubernetes.io/name: metrics-promtail
data:
  promtail-local-config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://metrics-loki.tenant-tensorworks-testing.svc.cluster.local:3100/loki/api/v1/push

    scrape_configs:
    - job_name: system
      
      static_configs:
      - targets:
          - localhost  
        labels:
          job: logs
          __path__: "/EventsServer/*.log"
      
      pipeline_stages:
      - json:
          expressions:
            timestamp: time
            instance: id
      - labels:
          instance:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
  


---

apiVersion: v1
kind: Service
metadata:
  name: metrics-promtail
  namespace: tenant-tensorworks-testing
  labels:
    app.kubernetes.io/name: metrics-promtail
spec:
  ports:
    - name: promtail-port
      protocol: TCP
      port: 9080
      targetPort: 9080
  selector:
    app.kubernetes.io/name: metrics-promtail

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-promtail
  namespace: tenant-tensorworks-testing
  labels:
    app.kubernetes.io/name: metrics-promtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-promtail
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-promtail
    spec:
      volumes:
        - name: metrics-promtail-config
          configMap:
            name: metrics-promtail
            items:
              - key: promtail-local-config.yaml
                path: promtail-local-config.yaml
        - name: metrics-promtail-data
          persistentVolumeClaim:
            claimName: metrics-buccaneer
      containers:
        - name: metrics-promtail
          image: grafana/promtail
          args: 
            - -config.file=/etc/promtail/promtail-local-config.yaml
          volumeMounts:
            - name: metrics-promtail-config
              mountPath: /etc/promtail/
            - name: metrics-promtail-data
              mountPath: /EventsServer
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.coreweave.cloud/cpu
                    operator: In
                    values:
                      - amd-epyc-milan
                  - key: topology.kubernetes.io/region
                    operator: In
                    values:
                      - LGA1
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600